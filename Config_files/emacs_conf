; list the packages you want
;(setq package-list '(anaconda-mode f dash s dash json-rpc cperl-mode cygwin-mount django-mode django-snippets yasnippet elpy yasnippet pyvenv idomenu highlight-indentation find-file-in-project company f dash s find-file-in-project flymake-perlcritic flymake-python-pyflakes flymake-easy highlight-indentation idomenu jedi-direx direx jedi python-environment deferred auto-complete popup epc ctable concurrent deferred json-rpc magit-filenotify magit git-rebase-mode git-commit-mode perl-completion pony-mode popup powershell python-django python-environment deferred pyvenv rainbow-delimiters rainbow-mode s web-mode yasnippet))

; list the repositories containing them
;; (setq package-archives '(
;;                          ("elpa" . "http://tromey.com/elpa/")
;;                          ("gnu" . "http://elpa.gnu.org/packages/")
;;                          ("marmalade" . "http://marmalade-repo.org/packages/")
;;                          ("melpa" . "http://melpa.milkbox.net/packages/")))

;; activate all the packages (in particular autoloads)
;; (package-initialize)

;; fetch the list of packages available
;; (unless package-archive-contents
 ;; (package-refresh-contents)

;; install the missing packages
;; (dolist (package package-list)
;;  (unless (package-installed-p package)
;;    (package-install package)))

;; (require 'package)
;; (add-to-list 'package-archives
;;                           '("elpy" . "http://jorgenschaefer.github.io/packages/"))

;; (custom-set-faces
;;  ;; custom-set-faces was added by Custom.
;;  ;; If you edit it by hand, you could mess it up, so be careful.
;;  ;; Your init file should contain only one such instance.
;;  ;; If there is more than one, they won't work right.
;;  '(highlight-indentation-face ((t (:inherit fringe :background "forest green" :foreground "white")))))

;; Changing prompt to y/n instead of yes/no
(defalias 'yes-or-no-p 'y-or-n-p)

;;Show Parentheses!
(show-paren-mode t)

;; Interactively Do Everything
(setq ido-enable-flex-matching t)
(setq ido-everywhere t)
(ido-mode 1)

;; Dired mode settings
(add-hook 'dired-load-hook
	  (lambda ()
	    (load "dired-x")
	    ;; Set dired-x global variables here.  For example:
	    ;; (setq dired-guess-shell-gnutar "gtar")
	    ;; (setq dired-x-hands-off-my-keys nil)
	    ))
(add-hook 'dired-mode-hook
	  (lambda ()
	    ;; Set dired-x buffer-local variables here.  For example:
	    ;; (dired-omit-mode 1)
	    ))

;; Getting rid of tool bar mode.
(tool-bar-mode -1)

;; Python Custom

;; Python debugger
(setq gud-pdb-command-name "python -m pdb")
;; Setting Python Indent to 4.
(setq python-indent 4)

;; Comment out/in region, maybe?

(defun comment-or-uncomment-line-or-region ()
  "Comments or uncomments the current line or region."
  (interactive)
  (if (region-active-p)
      (comment-or-uncomment-region (region-beginning) (region-end))
    (comment-or-uncomment-region (line-beginning-position) (line-end-position))
    )
  )

(global-set-key (kbd "C-c ;") 'comment-or-uncomment-line-or-region)

;; Remove shell command echo
(defun my-comint-init ()
  (setq comint-process-echoes t))
(add-hook 'comint-mode-hook 'my-comint-init)

;; Testing
(setq frame-title-format
      (list (format "%s %%S: %%j " (system-name))
	            '(buffer-file-name "%f" (dired-directory dired-directory "%b"))))

;; (load "/shares/tmockler_share/clizarraga/usr/local/ess-15.03-1/lisp/ess-site")
;; (add-to-list 'load-path "/home/clizarraga/usr/local/ess-15.03-1/lisp/")
(defun load-ESS ()
  (interactive)
  (add-to-list 'load-path "/home/clizarraga/usr/local/ESS/lisp/")
  (load "ess-site"))

;; Elpy mode
(defun load-Elpy ()
  (interactive)
  (package-initialize)
  (elpy-enable)
  (setq python-check-command (expand-file-name "~/usr/python2/bin/bin/pyflakes"))
  (pyvenv-activate (expand-file-name "~/usr/virtualenvs/Py2VE")))

;; Emacs Shell Customizations
(autoload 'ansi-color-for-comint-mode-on "ansi-color" nil t)
(add-hook 'shell-mode-hook 'ansi-color-for-comint-mode-on)

(add-hook 'c++-mode-hook
          (lambda()
            (set (make-local-variable 'compile-command)
                 (concat "make " (cur-file)))))

;; Emacs hard link changes.
(setq backup-by-copying-when-linked t)
(custom-set-variables
 ;; custom-set-variables was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(ansi-color-faces-vector
   [default default default italic underline success warning error])
 '(custom-enabled-themes (quote (tango-dark))))
(custom-set-faces
 ;; custom-set-faces was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 )

(add-hook 'dired-load-hook '(lambda () (require 'dired-x))) ; Load Dired X when Dired is loaded.
;; (setq dired-omit-mode t) ; Turn on Omit mode.
