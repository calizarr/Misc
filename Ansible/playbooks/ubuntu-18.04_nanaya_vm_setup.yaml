---
- hosts: nanaya_vm
  remote_user: calizarr
  vars:
    apt_repos:
      - 'ppa:alexlarsson/flatpak'
      - 'ppa:ubuntu-elisp/ppa'
    apt_packages:
      - 'build-essential'
      - 'curl'
      - 'emacs-snapshot'
      - 'flatpak'
      - 'fonts-powerline'
      - 'git'
      - 'linuxbrew-wrapper'
      - 'openjdk-11-jdk'
      - 'terminator'
    brew_packages:
      - 'git'
      - 'hub'
      - 'jq'
      - 'pyenv'
      - 'tmux'
      - 'zsh'
      - 'zsh-autosuggestions'
      - 'zsh-completions'
      - 'zsh-history-substring-search'
      - 'zsh-syntax-highlighting'
    snap_packages:
      - 'keepassxc'
      - 'docker'
      - 'htop'
    snap_classic_packages:
      - 'slack'
    ssh_items:
      # 0644, u=rw,g-rw,o-rw
      - { src: "{{ lookup('env', 'HOME') }}/.ssh/id_rsa", dest: "{{ ansible_env.HOME }}/.ssh/id_rsa", mode: "u=rw,g-rw,o-rw" }
      - { src: "{{ lookup('env', 'HOME') }}/.ssh/id_rsa.pub", dest: "{{ ansible_env.HOME }}/.ssh/id_rsa.pub", mode: "u=rw,g=r,o=r" }
    install_linuxbrew_if_missing: true
    upgrade_homebrew_packages: false
    git_config:
      user:
        email: "{{ git_email | default('calizarr@gmail.com') }}"
        name: "{{ git_user | default('None') }}"

  tasks:

  - name: Add emacs apt repository
    become: yes
    apt_repository:
      repo: "{{ apt_repos }}"

  - name: Apt update and upgrade
    become: yes
    apt:
      upgrade: dist
      update_cache: yes

  - name: Installing multiple packages (emacs, curl, git)
    become: yes
    apt:
      pkg: "{{ apt_packages }}"
      state: present

  - name: Ensure Linuxbrew is installed
    stat:
      path: "{{ ansible_env.HOME }}/.linuxbrew/bin/brew"
    register: "linuxbrew_check"

  - name: Fail if Linuxbrew is not installed and install_linuxbrew_if_missing is False
    fail:
      msg: "Linuxbrew is missing...Install it"
    when: >-
      not linuxbrew_check.stat.exists and
      not install_linuxbrew_if_missing

  - name: Installing Linuxbrew
    shell: |
      git clone https://github.com/Homebrew/brew ~/.linuxbrew/Homebrew
      mkdir ~/.linuxbrew/bin
      ln -s ~/.linuxbrew/Homebrew/bin/brew ~/.linuxbrew/bin
      echo 'eval $(~/.linuxbrew/bin/brew shellenv)' >>~/.profile
      eval $(~/.linuxbrew/bin/brew shellenv)
    when: >-
      not linuxbrew_check.stat.exists and
      install_linuxbrew_if_missing

  - name: Ensure Linuxbrew got installed
    stat:
      path: "{{ ansible_env.HOME }}/.linuxbrew/bin/brew"
    register: "linuxbrew_check_two"

  - name: Updating Linuxbrew
    homebrew:
      update_homebrew: yes
    when: linuxbrew_check_two.stat.exists

  - name: Installing Linuxbrew packages
    homebrew:
      name: "{{ brew_packages }}"
      state: present
      upgrade_all: "{{ upgrade_homebrew_packages }}"
    when: linuxbrew_check_two.stat.exists

  - name: Installing Snap packages
    become: yes
    snap:
      name: "{{ snap_packages }}"

  - name: Installing Snap classic confinement packages
    become: yes
    snap:
      classic: yes
      name: "{{ snap_classic_packages }}"

  - name: Set text scaling factor
    shell: "gsettings set org.gnome.desktop.interface text-scaling-factor 1.3"

  - name: Use WSL SSH key
    copy:
      src: "{{ item.src }}"
      dest: "{{ item.dest }}"
      mode: "{{ item.mode }}"
    with_items: "{{ ssh_items }}"

  - name: Check if emacs repo has already been cloned
    stat:
      path: "{{ ansible_env.HOME }}/.emacs.d"
    register: "emacs_repo"

  - name: Get emacs configuration
    git:
      repo: git@github.com:calizarr/.emacs.d.git
      dest: "{{ ansible_env.HOME }}/.emacs.d"
    when: not emacs_repo.stat.exists


  - name: Get dotfiles etc. repo
    git:
      repo: git@github.com:calizarr/Misc.git
      dest: "{{ ansible_env.HOME }}/GitHub_Repos"

  - name: Docker post-installations steps
    become: yes
    shell: |
      groupadd docker
      usermod -aG docker `whoami`

  - name: Set git config
    shell: |
      git config --global user.email {{ git_config.user.email }}
      git config --global user.name "{{ git_config.user.name }}"

  - name: Setting up Oh My Zsh
    shell: |
      sh -c "$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)" "" --unattended
      ln -s {{ ansible_env.HOME }}/GitHub_Repos/Misc/Config_Files/.zshrc {{ ansible_env.HOME }}/.zshrc

  - name: Screw you Gnome Terminal
    shell: |
      gsettings set org.gnome.Terminal.Legacy.Keybindings:/org/gnome/terminal/legacy/keybindings/ next-tab '<Primary>Tab'
      gsettings set org.gnome.Terminal.Legacy.Keybindings:/org/gnome/terminal/legacy/keybindings/ prev-tab '<Primary><Shift>Tab'
